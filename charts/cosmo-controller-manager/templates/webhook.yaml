{{ $tls := fromYaml ( include "cosmo-controller-manager.gen-certs" . ) }}
---
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  {{- if $.Values.enableCertManager }}
  annotations:
    cert-manager.io/inject-ca-from: {{ .Release.Namespace }}/cosmo-serving-cert
  {{- end }}
  labels:
    {{- include "cosmo-controller-manager.labels" . | nindent 4 }}
  name: cosmo-mutating-webhook-configuration
webhooks:
- admissionReviewVersions:
  - v1
  - v1beta1
  clientConfig:
    caBundle: {{ if not $.Values.enableCertManager -}}{{ $tls.caCert }}{{- else -}}Cg=={{ end }}
    service:
      name: cosmo-webhook-service
      namespace: {{ .Release.Namespace }}
      path: /mutate-cosmo-cosmo-workspace-github-io-v1beta1-instance
  failurePolicy: Fail
  name: minstance.kb.io
  rules:
  - apiGroups:
    - cosmo.cosmo-workspace.github.io
    apiVersions:
    - v1beta1
    operations:
    - CREATE
    - UPDATE
    resources:
    - instances
  sideEffects: None
---
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  {{- if $.Values.enableCertManager }}
  annotations:
    cert-manager.io/inject-ca-from: {{ .Release.Namespace }}/cosmo-serving-cert
  {{- end }}
  labels:
    {{- include "cosmo-controller-manager.labels" . | nindent 4 }}
  name: cosmo-validating-webhook-configuration
webhooks:
- admissionReviewVersions:
  - v1
  - v1beta1
  clientConfig:
    caBundle: {{ if not $.Values.enableCertManager -}}{{ $tls.caCert }}{{- else -}}Cg=={{ end }}
    service:
      name: cosmo-webhook-service
      namespace: {{ .Release.Namespace }}
      path: /validate-cosmo-cosmo-workspace-github-io-v1beta1-instance
  failurePolicy: Fail
  name: vinstance.kb.io
  rules:
  - apiGroups:
    - cosmo.cosmo-workspace.github.io
    apiVersions:
    - v1beta1
    operations:
    - CREATE
    - UPDATE
    resources:
    - instances
  sideEffects: None
---
{{- if not $.Values.enableCertManager }}
apiVersion: v1
kind: Secret
metadata:
  name: webhook-server-cert
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "cosmo-controller-manager.labels" . | nindent 4 }}
type: kubernetes.io/tls
data:
  ca.crt: {{ $tls.caCert }}
  tls.crt: {{ $tls.clientCert }}
  tls.key: {{ $tls.clientKey }}
{{- else }}
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  labels:
    {{- include "cosmo-controller-manager.labels" . | nindent 4 }}
  name: cosmo-serving-cert
  namespace: {{ .Release.Namespace }}
spec:
  dnsNames:
  - cosmo-webhook-service.{{ .Release.Namespace }}.svc
  - cosmo-webhook-service.{{ .Release.Namespace }}.svc.cluster.local
  issuerRef:
    kind: Issuer
    name: cosmo-selfsigned-issuer
  secretName: webhook-server-cert
---
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  labels:
    {{- include "cosmo-controller-manager.labels" . | nindent 4 }}
  name: cosmo-selfsigned-issuer
  namespace: {{ .Release.Namespace }}
spec:
  selfSigned: {}
{{- end }}